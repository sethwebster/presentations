"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@vercel";
exports.ids = ["vendor-chunks/@vercel"];
exports.modules = {

/***/ "(rsc)/./node_modules/@vercel/kv/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/@vercel/kv/dist/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VercelKV: () => (/* binding */ VercelKV),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   \"default\": () => (/* binding */ src_default),\n/* harmony export */   kv: () => (/* binding */ kv)\n/* harmony export */ });\n/* harmony import */ var _upstash_redis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @upstash/redis */ \"(rsc)/./node_modules/@upstash/redis/nodejs.mjs\");\n// src/index.ts\n\nvar _kv = null;\nprocess.env.UPSTASH_DISABLE_TELEMETRY = \"1\";\nvar VercelKV = class extends _upstash_redis__WEBPACK_IMPORTED_MODULE_0__.Redis {\n  // This API is based on https://github.com/redis/node-redis#scan-iterator which is not supported in @upstash/redis\n  /**\n   * Same as `scan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *scanIterator(options) {\n    let cursor = \"0\";\n    let keys;\n    do {\n      [cursor, keys] = await this.scan(cursor, options);\n      for (const key of keys) {\n        yield key;\n      }\n    } while (cursor !== \"0\");\n  }\n  /**\n   * Same as `hscan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *hscanIterator(key, options) {\n    let cursor = \"0\";\n    let items;\n    do {\n      [cursor, items] = await this.hscan(key, cursor, options);\n      for (const item of items) {\n        yield item;\n      }\n    } while (cursor !== \"0\");\n  }\n  /**\n   * Same as `sscan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *sscanIterator(key, options) {\n    let cursor = \"0\";\n    let items;\n    do {\n      [cursor, items] = await this.sscan(key, cursor, options);\n      for (const item of items) {\n        yield item;\n      }\n    } while (cursor !== \"0\");\n  }\n  /**\n   * Same as `zscan` but returns an AsyncIterator to allow iteration via `for await`.\n   */\n  async *zscanIterator(key, options) {\n    let cursor = \"0\";\n    let items;\n    do {\n      [cursor, items] = await this.zscan(key, cursor, options);\n      for (const item of items) {\n        yield item;\n      }\n    } while (cursor !== \"0\");\n  }\n};\nfunction createClient(config) {\n  return new VercelKV({\n    // The Next.js team recommends no value or `default` for fetch requests's `cache` option\n    // upstash/redis defaults to `no-store`, so we enforce `default`\n    cache: \"default\",\n    enableAutoPipelining: true,\n    ...config\n  });\n}\nvar src_default = new Proxy(\n  {},\n  {\n    get(target, prop, receiver) {\n      if (prop === \"then\" || prop === \"parse\") {\n        return Reflect.get(target, prop, receiver);\n      }\n      if (!_kv) {\n        if (!process.env.KV_REST_API_URL || !process.env.KV_REST_API_TOKEN) {\n          throw new Error(\n            \"@vercel/kv: Missing required environment variables KV_REST_API_URL and KV_REST_API_TOKEN\"\n          );\n        }\n        console.warn(\n          '\\x1B[33m\"The default export has been moved to a named export and it will be removed in version 1, change to import { kv }\\x1B[0m\"'\n        );\n        _kv = createClient({\n          url: process.env.KV_REST_API_URL,\n          token: process.env.KV_REST_API_TOKEN\n        });\n      }\n      return Reflect.get(_kv, prop);\n    }\n  }\n);\nvar kv = new Proxy(\n  {},\n  {\n    get(target, prop) {\n      if (!_kv) {\n        if (!process.env.KV_REST_API_URL || !process.env.KV_REST_API_TOKEN) {\n          throw new Error(\n            \"@vercel/kv: Missing required environment variables KV_REST_API_URL and KV_REST_API_TOKEN\"\n          );\n        }\n        _kv = createClient({\n          url: process.env.KV_REST_API_URL,\n          token: process.env.KV_REST_API_TOKEN\n        });\n      }\n      return Reflect.get(_kv, prop);\n    }\n  }\n);\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHZlcmNlbC9rdi9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDdUM7QUFDdkM7QUFDQTtBQUNBLDZCQUE2QixpREFBSztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0lBQWdJLElBQUk7QUFDcEk7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZXRod2Vic3Rlci9EZXZlbG9wbWVudC9wcmVzZW50YXRpb25zL3ByZXNlbnRhdGlvbi1mcmFtZXdvcmsvbm9kZV9tb2R1bGVzL0B2ZXJjZWwva3YvZGlzdC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaW5kZXgudHNcbmltcG9ydCB7IFJlZGlzIH0gZnJvbSBcIkB1cHN0YXNoL3JlZGlzXCI7XG52YXIgX2t2ID0gbnVsbDtcbnByb2Nlc3MuZW52LlVQU1RBU0hfRElTQUJMRV9URUxFTUVUUlkgPSBcIjFcIjtcbnZhciBWZXJjZWxLViA9IGNsYXNzIGV4dGVuZHMgUmVkaXMge1xuICAvLyBUaGlzIEFQSSBpcyBiYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vcmVkaXMvbm9kZS1yZWRpcyNzY2FuLWl0ZXJhdG9yIHdoaWNoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gQHVwc3Rhc2gvcmVkaXNcbiAgLyoqXG4gICAqIFNhbWUgYXMgYHNjYW5gIGJ1dCByZXR1cm5zIGFuIEFzeW5jSXRlcmF0b3IgdG8gYWxsb3cgaXRlcmF0aW9uIHZpYSBgZm9yIGF3YWl0YC5cbiAgICovXG4gIGFzeW5jICpzY2FuSXRlcmF0b3Iob3B0aW9ucykge1xuICAgIGxldCBjdXJzb3IgPSBcIjBcIjtcbiAgICBsZXQga2V5cztcbiAgICBkbyB7XG4gICAgICBbY3Vyc29yLCBrZXlzXSA9IGF3YWl0IHRoaXMuc2NhbihjdXJzb3IsIG9wdGlvbnMpO1xuICAgICAgZm9yIChjb25zdCBrZXkgb2Yga2V5cykge1xuICAgICAgICB5aWVsZCBrZXk7XG4gICAgICB9XG4gICAgfSB3aGlsZSAoY3Vyc29yICE9PSBcIjBcIik7XG4gIH1cbiAgLyoqXG4gICAqIFNhbWUgYXMgYGhzY2FuYCBidXQgcmV0dXJucyBhbiBBc3luY0l0ZXJhdG9yIHRvIGFsbG93IGl0ZXJhdGlvbiB2aWEgYGZvciBhd2FpdGAuXG4gICAqL1xuICBhc3luYyAqaHNjYW5JdGVyYXRvcihrZXksIG9wdGlvbnMpIHtcbiAgICBsZXQgY3Vyc29yID0gXCIwXCI7XG4gICAgbGV0IGl0ZW1zO1xuICAgIGRvIHtcbiAgICAgIFtjdXJzb3IsIGl0ZW1zXSA9IGF3YWl0IHRoaXMuaHNjYW4oa2V5LCBjdXJzb3IsIG9wdGlvbnMpO1xuICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGl0ZW1zKSB7XG4gICAgICAgIHlpZWxkIGl0ZW07XG4gICAgICB9XG4gICAgfSB3aGlsZSAoY3Vyc29yICE9PSBcIjBcIik7XG4gIH1cbiAgLyoqXG4gICAqIFNhbWUgYXMgYHNzY2FuYCBidXQgcmV0dXJucyBhbiBBc3luY0l0ZXJhdG9yIHRvIGFsbG93IGl0ZXJhdGlvbiB2aWEgYGZvciBhd2FpdGAuXG4gICAqL1xuICBhc3luYyAqc3NjYW5JdGVyYXRvcihrZXksIG9wdGlvbnMpIHtcbiAgICBsZXQgY3Vyc29yID0gXCIwXCI7XG4gICAgbGV0IGl0ZW1zO1xuICAgIGRvIHtcbiAgICAgIFtjdXJzb3IsIGl0ZW1zXSA9IGF3YWl0IHRoaXMuc3NjYW4oa2V5LCBjdXJzb3IsIG9wdGlvbnMpO1xuICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGl0ZW1zKSB7XG4gICAgICAgIHlpZWxkIGl0ZW07XG4gICAgICB9XG4gICAgfSB3aGlsZSAoY3Vyc29yICE9PSBcIjBcIik7XG4gIH1cbiAgLyoqXG4gICAqIFNhbWUgYXMgYHpzY2FuYCBidXQgcmV0dXJucyBhbiBBc3luY0l0ZXJhdG9yIHRvIGFsbG93IGl0ZXJhdGlvbiB2aWEgYGZvciBhd2FpdGAuXG4gICAqL1xuICBhc3luYyAqenNjYW5JdGVyYXRvcihrZXksIG9wdGlvbnMpIHtcbiAgICBsZXQgY3Vyc29yID0gXCIwXCI7XG4gICAgbGV0IGl0ZW1zO1xuICAgIGRvIHtcbiAgICAgIFtjdXJzb3IsIGl0ZW1zXSA9IGF3YWl0IHRoaXMuenNjYW4oa2V5LCBjdXJzb3IsIG9wdGlvbnMpO1xuICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGl0ZW1zKSB7XG4gICAgICAgIHlpZWxkIGl0ZW07XG4gICAgICB9XG4gICAgfSB3aGlsZSAoY3Vyc29yICE9PSBcIjBcIik7XG4gIH1cbn07XG5mdW5jdGlvbiBjcmVhdGVDbGllbnQoY29uZmlnKSB7XG4gIHJldHVybiBuZXcgVmVyY2VsS1Yoe1xuICAgIC8vIFRoZSBOZXh0LmpzIHRlYW0gcmVjb21tZW5kcyBubyB2YWx1ZSBvciBgZGVmYXVsdGAgZm9yIGZldGNoIHJlcXVlc3RzJ3MgYGNhY2hlYCBvcHRpb25cbiAgICAvLyB1cHN0YXNoL3JlZGlzIGRlZmF1bHRzIHRvIGBuby1zdG9yZWAsIHNvIHdlIGVuZm9yY2UgYGRlZmF1bHRgXG4gICAgY2FjaGU6IFwiZGVmYXVsdFwiLFxuICAgIGVuYWJsZUF1dG9QaXBlbGluaW5nOiB0cnVlLFxuICAgIC4uLmNvbmZpZ1xuICB9KTtcbn1cbnZhciBzcmNfZGVmYXVsdCA9IG5ldyBQcm94eShcbiAge30sXG4gIHtcbiAgICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICAgICAgaWYgKHByb3AgPT09IFwidGhlblwiIHx8IHByb3AgPT09IFwicGFyc2VcIikge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5nZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcik7XG4gICAgICB9XG4gICAgICBpZiAoIV9rdikge1xuICAgICAgICBpZiAoIXByb2Nlc3MuZW52LktWX1JFU1RfQVBJX1VSTCB8fCAhcHJvY2Vzcy5lbnYuS1ZfUkVTVF9BUElfVE9LRU4pIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBcIkB2ZXJjZWwva3Y6IE1pc3NpbmcgcmVxdWlyZWQgZW52aXJvbm1lbnQgdmFyaWFibGVzIEtWX1JFU1RfQVBJX1VSTCBhbmQgS1ZfUkVTVF9BUElfVE9LRU5cIlxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgICdcXHgxQlszM21cIlRoZSBkZWZhdWx0IGV4cG9ydCBoYXMgYmVlbiBtb3ZlZCB0byBhIG5hbWVkIGV4cG9ydCBhbmQgaXQgd2lsbCBiZSByZW1vdmVkIGluIHZlcnNpb24gMSwgY2hhbmdlIHRvIGltcG9ydCB7IGt2IH1cXHgxQlswbVwiJ1xuICAgICAgICApO1xuICAgICAgICBfa3YgPSBjcmVhdGVDbGllbnQoe1xuICAgICAgICAgIHVybDogcHJvY2Vzcy5lbnYuS1ZfUkVTVF9BUElfVVJMLFxuICAgICAgICAgIHRva2VuOiBwcm9jZXNzLmVudi5LVl9SRVNUX0FQSV9UT0tFTlxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBSZWZsZWN0LmdldChfa3YsIHByb3ApO1xuICAgIH1cbiAgfVxuKTtcbnZhciBrdiA9IG5ldyBQcm94eShcbiAge30sXG4gIHtcbiAgICBnZXQodGFyZ2V0LCBwcm9wKSB7XG4gICAgICBpZiAoIV9rdikge1xuICAgICAgICBpZiAoIXByb2Nlc3MuZW52LktWX1JFU1RfQVBJX1VSTCB8fCAhcHJvY2Vzcy5lbnYuS1ZfUkVTVF9BUElfVE9LRU4pIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBcIkB2ZXJjZWwva3Y6IE1pc3NpbmcgcmVxdWlyZWQgZW52aXJvbm1lbnQgdmFyaWFibGVzIEtWX1JFU1RfQVBJX1VSTCBhbmQgS1ZfUkVTVF9BUElfVE9LRU5cIlxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgX2t2ID0gY3JlYXRlQ2xpZW50KHtcbiAgICAgICAgICB1cmw6IHByb2Nlc3MuZW52LktWX1JFU1RfQVBJX1VSTCxcbiAgICAgICAgICB0b2tlbjogcHJvY2Vzcy5lbnYuS1ZfUkVTVF9BUElfVE9LRU5cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUmVmbGVjdC5nZXQoX2t2LCBwcm9wKTtcbiAgICB9XG4gIH1cbik7XG5leHBvcnQge1xuICBWZXJjZWxLVixcbiAgY3JlYXRlQ2xpZW50LFxuICBzcmNfZGVmYXVsdCBhcyBkZWZhdWx0LFxuICBrdlxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@vercel/kv/dist/index.js\n");

/***/ })

};
;